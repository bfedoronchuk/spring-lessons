package com.learn.spring.demo.services;

import com.learn.spring.demo.entities.VulnerabilityCategory;
import com.learn.spring.demo.exceptions.EntityAlreadyExistsException;
import com.learn.spring.demo.exceptions.InvalidFormatException;
import com.learn.spring.demo.repositories.VulnerabilityCategoryRepository;
import com.sun.media.sound.InvalidDataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import java.util.Objects;

@Service
public class VulnerabilityCategoryService {
    private VulnerabilityCategoryRepository vulnerabilityCategoryRepository;

    @Autowired
    public VulnerabilityCategoryService(VulnerabilityCategoryRepository vulnerabilityCategoryRepository) {
        this.vulnerabilityCategoryRepository = vulnerabilityCategoryRepository;
    }

    public List<VulnerabilityCategory> getAll(){
        return this.vulnerabilityCategoryRepository.findAll();
    }


    public VulnerabilityCategory save(VulnerabilityCategory category) {
        Objects.requireNonNull(category);
        String categoryName = category.getName();
        if (categoryName == null || categoryName.isEmpty()) {
            throw new InvalidFormatException("Category name can not be null");
        }
        VulnerabilityCategory existingCategory = vulnerabilityCategoryRepository.findByName(categoryName);
        if (existingCategory != null) {
            throw new EntityAlreadyExistsException("Vulnerability category with such name already exists");
        }
        return this.vulnerabilityCategoryRepository.save(category);
    }
}
